// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("MYSQL_URL")
}

enum Gender {
  MALE
  FEMALE
}
model users {
  user_id Int @id @default(autoincrement())
  user_name String @default("") @db.VarChar(50)
  user_avatar String @default("")
  user_email String @unique @db.VarChar(50)
  user_phone String @default("") @db.VarChar(10)
  user_password String @db.VarChar(255)
  user_gender Gender @default(MALE)
  user_birthday DateTime?
  user_salt String @db.VarChar(255)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt @default(now())

  user_tokens user_tokens[]
}

model user_tokens {
  user_id Int 
  user_refresh_token String @unique @db.VarChar(255)
  user_public_key String @unique @db.VarChar(255)
  user_private_key String @unique @db.VarChar(255)
  user_login_time DateTime @default(now())
  user_login_ip String @default("") @db.VarChar(50)
  user_agent String @default("") @db.VarChar(50)
  expiration DateTime
  is_active Boolean @default(true)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt @default(now())
  
  user users @relation(fields: [user_id], references: [user_id])

  @@index([user_id])
}
// model UserRoles {
//   role_id Int @id @default(autoincrement())
//   role_name String @default("") @db.VarChar(50)
//   role_description String @default("") @db.VarChar(255)
//   created_at DateTime @default(now())
//   updated_at DateTime @updatedAt @default(now())
// }
// model UserRolesMapping {
//   id Int @id @default(autoincrement())
//   user_id Int
//   role_id Int
//   created_at DateTime @default(now())
//   updated_at DateTime @updatedAt @default(now())
//   @@unique([user_id, role_id])
// }

